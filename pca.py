import numpy as np
from mpl_toolkits.mplot3d import Axes3D
import matplotlib.pyplot as plt
from sklearn.decomposition import PCA

votes = np.array([
    [-1, -1, -1, 1, -1, 1, 1, -1, 1, -1, -1, -1, -1, -1, -1, 1, 1, -1, 1, -1, 1, 1, -1, 1, -1, -1, 1, -1, -1, -1],
    [1, 1, -1, 1, -1, 1, -1, -1, -1, 1, -1, -1, -1, 1, -1, 1, 1, 1, 1, -1, 1, 1, -1, 0, 1, -1, -1, -1, -1, 1],
    [1, 0, 1, -1, 1, 1, -1, 0, -1, 1, 1, 1, -1, -1, 0, 1, 1, 1, 1, -1, -1, -1, -1, 1, 0, 1, 1, -1, 1, -1],
    [-1, -1, -1, -1, 1, -1, -1, 1, 1, -1, 1, 1, 0, -1, 1, -1, -1, 1, -1, 1, -1, -1, -1, -1, 1, -1, -1, 1, 1, -1],
    [-1, 1, -1, -1, -1, 1, -1, -1, 1, -1, 1, 1, -1, -1, 1, -1, -1, 1, -1, 1, -1, -1, -1, -1, -1, -1, 1, -1, 1, -1],
    [1, -1, 1, -1, 1, -1, -1, 1, 1, -1, 1, -1, 1, -1, 1, -1, -1, 1, -1, 1, -1, -1, 1, 1, 1, 0, -1, 1, 1, -1],
    [-1, 1, -1, -1, -1, 1, 1, -1, 1, -1, -1, -1, -1, 0, -1, 1, 1, -1, -1, 1, 1, 1, -1, -1, -1, -1, 1, -1, 1, -1],
    [-1, 1, 1, -1, 1, 1, -1, 1, -1, -1, 1, -1, 1, -1, 1, -1, 1, 1, 1, 1, -1, -1, -1, 1, 1, -1, -1, -1, 1, -1],
    [1, -1, -1, 1, 1, 1, 1, -1, 1, -1, -1, 1, -1, 1, -1, 1, 1, 1, 1, 1, 1, 1, -1, 1, -1, 0, 1, -1, -1, 1],
    [1, -1, 1, -1, 1, -1, -1, -1, 1, -1, -1, -1, 1, -1, 1, -1, -1, 0, 1, 1, -1, -1, -1, 1, -1, -1, -1, 1, 1, -1],
    [-1, 1, -1, -1, -1, 1, 1, -1, 1, -1, 1, 1, -1, -1, -1, 1, 1, 0, 1, -1, 1, 0, -1, -1, -1, -1, 1, -1, -1, -1],
    [1, -1, -1, -1, 1, -1, -1, 1, -1, 1, 1, 1, 1, -1, 1, -1, -1, 1, -1, 1, -1, -1, -1, -1, 1, 1, -1, -1, 1, -1],
    [1, -1, 1, -1, 1, -1, -1, 1, 1, 1, -1, 1, 1, -1, 1, -1, -1, 1, -1, 1, -1, -1, 1, 1, 1, 1, -1, -1, 1, -1]
])

names = ["VVD", "PVV", "50Plus", "Denk", "ChristenUnie", "GroenLinks", "SGP", "PvdA", "FvD", "D66", "CDA", "SP", "PvdD"]

pca = PCA(n_components=3)
pca.fit(votes)
data = pca.transform(votes)

print(data)

fig = plt.figure()
ax = Axes3D(fig)
ax.set_title('3D PCA Nederlandse Politiek')
ax.scatter(data[:,0], data[:,1], data[:,2])

for i, txt in enumerate(names):
    ax.text(data[i,0],data[i,1], data[i,2], txt)

plt.show()
